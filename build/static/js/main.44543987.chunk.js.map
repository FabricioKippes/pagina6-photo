{"version":3,"sources":["logo.svg","load.gif","instashot.png","component-nav.js","component-fileUpload.js","component-modal.js","component-post.js","component-loading.js","component-feed.js","page-feed.js","page-home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Nav","firebase","auth","signOut","then","result","console","log","window","location","href","catch","error","concat","code","message","react_default","a","createElement","Fragment","className","src","Logo","alt","id","onClick","this","handleLogout","data-target","props","avatar","nombre","React","Component","FileUpload","_this","Object","classCallCheck","_super","call","state","uploadValue","value","max","type","onChange","onUpload","width","picture","Modal","user","photoURL","displayName","handleChange","e","preventDefault","setState","txt","target","handleUpload","file","files","task","storage","ref","name","put","on","snapshot","percentage","bytesTransferred","totalBytes","record","pic","metadata","fullPath","database","push","set","_this2","M","AutoInit","onAuthStateChanged","htmlFor","component_fileUpload","Post","url","referencia","getDownloadURL","cath","Loading","load","FeedContent","data","loading","val","component_loading","map","item","i","component_post","key","reverse","Feed","component_nav","component_feed","ReactDOM","createPortal","component_modal","document","getElementById","Home","history","provider","GoogleAuthProvider","signInWithPopup","email","insta","handleAuth","App","BrowserRouter","Switch","Route","exact","path","component","Boolean","hostname","match","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.44543987.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.3a68088f.svg\";","module.exports = __webpack_public_path__ + \"static/media/load.a21746f5.gif\";","module.exports = __webpack_public_path__ + \"static/media/instashot.b6dd97bd.png\";","import React from \"react\";\nimport Logo from \"./logo.svg\";\nimport firebase from \"firebase/app\";\n\nclass Nav extends React.Component {\n  handleLogout() {\n    firebase\n      .auth()\n      .signOut()\n      .then(result => {\n        console.log(\"Desconectamos guacho\");\n        window.location.href = \"/\";\n      })\n      .catch(error => console.log(`Error ${error.code}: ${error.message}`));\n  }\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"nav valign-wrapper\">\n          <div className=\"container\">\n            <div className=\"row  margin0\">\n              <div className=\"col s2 l1  right-align flex\">\n                <img src={Logo} alt=\"\" className=\"logo\" />\n              </div>\n              <div className=\"col s3 l1 flex\">\n                <p>Truchigram</p>\n              </div>\n              <div className=\"col s2 l1 offset-s5 offset-l7 right-align flex\">\n                <ul id=\"dropdown2\" className=\"dropdown-content\">\n                  <li>\n                    <a onClick={this.handleLogout}>logout</a>\n                  </li>\n                </ul>\n                <a\n                  className=\"dropdown-trigger\"\n                  href=\"#!\"\n                  data-target=\"dropdown2\"\n                >\n                  <img\n                    src={this.props.avatar}\n                    alt={this.props.nombre}\n                    className=\"circle cardPic inline\"\n                  />\n                </a>\n              </div>\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Nav;\n","import React, { Component } from \"react\";\n\nclass FileUpload extends Component {\n  constructor() {\n    super();\n    this.state = {\n      uploadValue: 0\n    };\n  }\n\n  render() {\n    return (\n      <div>\n        <progress value={this.props.uploadValue} max=\"100\">\n          {this.state.uploadValue} %\n        </progress>\n        <br />\n        <input type=\"file\" onChange={this.props.onUpload} />\n        <br />\n        <img width=\"320\" src={this.state.picture} alt=\"\" />\n      </div>\n    );\n  }\n}\n\nexport default FileUpload;\n","import React from \"react\";\nimport M from \"materialize-css\";\nimport FileUpload from \"./component-fileUpload\";\nimport firebase from \"firebase/app\";\nimport \"firebase/database\";\nimport \"firebase/firebase-storage\";\n\nclass Modal extends React.Component {\n  state = {\n    uploadValue: \"0\",\n    user: { photoURL: \"\", displayName: \"\" },\n  };\n  componentDidMount() {\n    M.AutoInit();\n    firebase.auth().onAuthStateChanged((user) => {\n      this.setState({ user });\n    });\n  }\n  handleChange = (e) => {\n    e.preventDefault();\n    this.setState({\n      txt: e.target.value,\n    });\n  };\n  handleUpload = (e) => {\n    e.preventDefault();\n\n    const file = e.target.files[0];\n    const storageRef = firebase.storage().ref(`fotos/${file.name}`);\n    const task = storageRef.put(file);\n    task.on(\n      \"state_changed\",\n      (snapshot) => {\n        let percentage =\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n        this.setState({\n          uploadValue: percentage,\n        });\n      },\n      (error) => {\n        console.log(error.message);\n      },\n      () => {\n        const record = {\n          avatar: this.state.user.photoURL,\n          nombre: this.state.user.displayName,\n          txt: this.state.txt,\n          pic: task.snapshot.metadata.fullPath,\n        };\n        const db = firebase.database();\n        const dbRef = db.ref(\"pictures\");\n        const newPïcture = dbRef.push();\n        newPïcture.set(record);\n      }\n    );\n  };\n  render() {\n    return (\n      <React.Fragment>\n        <a\n          href=\"#modal1\"\n          className=\"btn-floating btn-large waves-effect waves-light modal-trigger red FAB\"\n          id=\"fab\"\n        >\n          <i className=\"material-icons\">add</i>\n        </a>\n\n        <div id=\"modal1\" className=\"modal\">\n          <div className=\"modal-content\">\n            <h4>Posteá en Truchigram</h4>\n            <div className=\"chip\">\n              <img src={this.state.user.photoURL} />\n              {this.state.user.displayName}\n            </div>\n\n            <div className=\"row\">\n              <form className=\"col l12\">\n                <div className=\"row\">\n                  <div className=\"input-field col s9 l4\">\n                    <i className=\"material-icons prefix\">mode_edit</i>\n                    <textarea\n                      id=\"icon_prefix2\"\n                      className=\"materialize-textarea\"\n                      onChange={this.handleChange}\n                    />\n                    <label htmlFor=\"icon_prefix2\">Mensaje</label>\n                    <FileUpload\n                      onUpload={this.handleUpload}\n                      uploadValue={this.state.uploadValue}\n                    />\n                    <button onClick={this.handleUpload}>Subir</button>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </div>\n          <div className=\"modal-footer\" />\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Modal;\n","import React from \"react\";\nimport firebase from \"firebase/app\";\nimport \"firebase/firebase-storage\";\nclass Post extends React.Component {\n  state = {\n    url: null,\n  };\n\n  componentWillMount() {\n    let referencia = this.props.pic;\n    var pathReferencia = firebase\n      .storage()\n      .ref(referencia)\n      .getDownloadURL()\n      .then((url) => {\n        this.setState(url);\n      })\n      .cath((error) => {\n        console.log(error.message);\n      });\n  }\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"card\">\n          <div className=\"card-content\">\n            <div className=\"row margin0\">\n              <div className=\"col s2 l1 valign-wrapper\">\n                <img\n                  src={this.props.avatar}\n                  alt={this.props.nombre}\n                  className=\"circle cardPic inline\"\n                />\n              </div>\n              <div className=\"col s10 l6 valign-wrapper fix-nombre\">\n                <p className=\"inline cardName\">{this.props.nombre}</p>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"card-image\">\n            <img src={this.state.url} alt=\"\" />\n          </div>\n          <div className=\"card-content\">\n            <p>{this.props.txt}</p>\n          </div>\n        </div>{\" \"}\n        <br />\n        <br />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Post;\n","import React from \"react\";\nimport load from \"./load.gif\";\nfunction Loading() {\n  return (\n    <React.Fragment>\n      <div className=\"upp\">\n        <div className=\"col-md-12 centrar\">\n          <img src={load} alt=\"\" className=\"lo\" />\n        </div>\n      </div>\n    </React.Fragment>\n  );\n}\nexport default Loading;\n","import React from \"react\";\nimport Post from \"./component-post\";\nimport firebase from \"firebase/app\";\nimport \"firebase/database\";\nimport Loading from \"./component-loading\";\n\nclass FeedContent extends React.Component {\n  state = {\n    data: [],\n    loading: null,\n  };\n  componentDidMount() {\n    this.setState({\n      data: [],\n      loading: null,\n    });\n    const db = firebase.database();\n    const dbRef = db.ref(\"pictures\");\n    dbRef.on(\"child_added\", (snapshot) => {\n      this.setState({\n        data: this.state.data.concat(snapshot.val()),\n        loading: false,\n      });\n    });\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        {this.state.loading && <Loading />}\n        <br />\n        <br />\n        <br />\n        <br />\n        {this.state.data\n          .map((item, i) => {\n            return (\n              <Post\n                key={i}\n                txt={item.txt}\n                nombre={item.nombre}\n                avatar={item.avatar}\n                pic={item.pic}\n              />\n            );\n          })\n          .reverse()}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default FeedContent;\n","import React from \"react\";\nimport Nav from \"./component-nav\";\nimport ReactDOM from \"react-dom\";\nimport Modal from \"./component-modal\";\nimport FeedContent from \"./component-feed\";\nimport firebase from \"firebase/app\";\nimport \"firebase/database\";\n\nclass Feed extends React.Component {\n  state = {\n    user: { photoURL: \"\", displayName: \"\" },\n  };\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged((user) => {\n      this.setState({ user });\n    });\n  }\n  render() {\n    return (\n      <React.Fragment>\n        <Nav\n          nombre={this.state.user.displayName}\n          avatar={this.state.user.photoURL}\n        />\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col l6 offset-l3\">\n              <FeedContent />\n\n              {ReactDOM.createPortal(\n                <Modal />,\n                document.getElementById(\"teleport\")\n              )}\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Feed;\n","import React from \"react\";\nimport insta from \"./instashot.png\";\nimport firebase from \"firebase/app\";\nimport \"firebase/database\";\nimport \"firebase/auth\";\n\nclass Home extends React.Component {\n  state = {\n    user: null,\n  };\n  componentWillMount() {\n    firebase.auth().onAuthStateChanged((user) => {\n      this.setState({\n        user,\n      });\n      if (this.state.user) {\n        this.props.history.push(\"/feed\");\n      }\n    });\n  }\n  handleAuth() {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    firebase\n      .auth()\n      .signInWithPopup(provider)\n      .then((result) => console.log(\"entro: \", result.user.email))\n      .catch((error) => console.log(error.code));\n  }\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"container vh100\">\n          <div className=\"row \">\n            <div className=\"col m4 l5 offset-l1 off\">\n              <img alt=\"\" src={insta} />\n            </div>\n            <div className=\"col m3 l3 top120\">\n              <div className=\"card\">\n                <div className=\"card-image\">\n                  <span className=\"card-title\">Card Title</span>\n                </div>\n                <div className=\"card-content center\">\n                  <img\n                    alt=\"\"\n                    className=\"circle homePic\"\n                    src=\"https://image.freepik.com/vector-gratis/concepto-diseno-redes-sociales_1284-5151.jpg\"\n                  />\n                  <p>\n                    Bienvenidos a <strong>Truchigram</strong>, esta app# esta\n                    creada para el curso de Firebase de escuela devRock para\n                    mostrar un primer ejemplo del poder de esta base de datos y\n                    lo fácil que resulta para arrancar a crear.\n                  </p>\n                </div>\n                <div className=\"card-action right-align\">\n                  <button\n                    className=\"waves-effect waves-light btn\"\n                    onClick={this.handleAuth}\n                  >\n                    Logear con Google\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Home;\n","import React from \"react\";\nimport \"./App.css\";\nimport \"materialize-css/dist/css/materialize.min.css\";\nimport Feed from \"./page-feed\";\nimport Home from \"./page-home\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <Switch>\n          <Route exact path=\"/feed\" component={Feed} />\n          <Route path=\"/\" component={Home} />\n        </Switch>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport firebase from \"firebase/app\";\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyAyXxQijG4eoHvsHEPyPCJTi26roSRXupc\",\n  authDomain: \"truchigram.firebaseapp.com\",\n  databaseURL: \"https://truchigram.firebaseio.com\",\n  projectId: \"truchigram\",\n  storageBucket: \"truchigram.appspot.com\",\n  messagingSenderId: \"887923179137\",\n  appId: \"1:887923179137:web:b8ddab7c7f929486\"\n});\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}